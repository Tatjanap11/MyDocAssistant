{"spans": [{"name": "VectorStoreRetriever", "context": {"span_id": "0xbee0f784a2b94638", "trace_id": "0x63a3539a61969af40af98feb8c3ea8ca"}, "parent_id": null, "start_time": 1728427449284491800, "end_time": 1728427449754270400, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"caa138a757ee4675a232042ef7369bf2\"", "mlflow.spanType": "\"RETRIEVER\"", "mlflow.spanInputs": "\"What is SageMaker?\"", "metadata": "{\"ls_retriever_name\": \"vectorstore\", \"ls_vector_store_provider\": \"QdrantVectorStore\", \"ls_embedding_provider\": \"OpenAIEmbeddings\"}", "mlflow.spanOutputs": "[{\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/integrating-sagemaker.md\", \"_id\": \"1194a9f0-8040-4303-a3c9-d20a71f95a74\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"How Amazon SageMaker uses AWS Secrets Manager\\n\\nSageMaker is a fully managed machine learning service. With SageMaker, data scientists and developers can quickly and easily build and train machine learning models, and then directly deploy them into a production-ready hosted environment. It provides an integrated Jupyter authoring notebook instance for easy access to your data sources for exploration and analysis, so you don't have to manage servers.\\n\\nYou can associate Git repositories with your Jupyter notebook instances to save your notebooks in a source control environment that persists even if you stop or delete your notebook instance. You can manage your private repositories credentials using Secrets Manager. For more information, see Associate Git Repositories with Amazon SageMaker Notebook Instances in the Amazon SageMaker Developer Guide.\", \"type\": \"Document\"}, {\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/examples-sagemaker.md\", \"_id\": \"15f4c973-8152-4a9f-b830-a2d8b49f4bc8\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"Working with Amazon SageMaker\\n\\nAmazon SageMaker is a fully managed service that provides every developer and data scientist with the ability to build, train, and deploy machine learning (ML) models. See the following resources for complete code examples with instructions.\\n\\nLink to Github\\n\\nLink to AWS Code Sample Catalog\", \"type\": \"Document\"}, {\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/kubernetes-sagemaker-operators.md\", \"_id\": \"e1a9afdd-95fb-4dec-979f-d4efa5c3bc38\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"SageMaker Operators for Kubernetes\\n\\nSageMaker Operators for Kubernetes make it easier for developers and data scientists using Kubernetes to train, tune, and deploy machine learning (ML) models in SageMaker. You can install these SageMaker Operators on your Kubernetes cluster in Amazon Elastic Kubernetes Service (Amazon EKS) to create SageMaker jobs natively using the Kubernetes API and command-line Kubernetes tools such as kubectl. This guide shows how to set up and use the operators to run model training, hyperparameter tuning, or inference (real-time and batch) on SageMaker from a Kubernetes cluster. The procedures and guidelines in this chapter assume that you are familiar with Kubernetes and its basic commands.\", \"type\": \"Document\"}, {\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/sagemaker-projects-whatis.md\", \"_id\": \"a84a578d-c6d9-40be-ae87-9faa8cae0fdf\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"What is in a SageMaker Project?\\n\\nCustomers have the flexibility to set up their projects with the resources that best serve their use case. The example below showcases the MLOps setup for an ML workflow, including model training and deployment.\", \"type\": \"Document\"}]"}, "events": []}], "request": "\"What is SageMaker?\"", "response": "[{\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/integrating-sagemaker.md\", \"_id\": \"1194a9f0-8040-4303-a3c9-d20a71f95a74\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"How Amazon SageMaker uses AWS Secrets Manager\\n\\nSageMaker is a fully managed machine learning service. With SageMaker, data scientists and developers can quickly and easily build and train machine learning models, and then directly deploy them into a production-ready hosted environment. It provides an integrated Jupyter authoring notebook instance for easy access to your data sources for exploration and analysis, so you don't have to manage servers.\\n\\nYou can associate Git repositories with your Jupyter notebook instances to save your notebooks in a source control environment that persists even if you stop or delete your notebook instance. You can manage your private repositories credentials using Secrets Manager. For more information, see Associate Git Repositories with Amazon SageMaker Notebook Instances in the Amazon SageMaker Developer Guide.\", \"type\": \"Document\"}, {\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/examples-sagemaker.md\", \"_id\": \"15f4c973-8152-4a9f-b830-a2d8b49f4bc8\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"Working with Amazon SageMaker\\n\\nAmazon SageMaker is a fully managed service that provides every developer and data scientist with the ability to build, train, and deploy machine learning (ML) models. See the following resources for complete code examples with instructions.\\n\\nLink to Github\\n\\nLink to AWS Code Sample Catalog\", \"type\": \"Document\"}, {\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/kubernetes-sagemaker-operators.md\", \"_id\": \"e1a9afdd-95fb-4dec-979f-d4efa5c3bc38\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"SageMaker Operators for Kubernetes\\n\\nSageMaker Operators for Kubernetes make it easier for developers and data scientists using Kubernetes to train, tune, and deploy machine learning (ML) models in SageMaker. You can install these SageMaker Operators on your Kubernetes cluster in Amazon Elastic Kubernetes Service (Amazon EKS) to create SageMaker jobs natively using the Kubernetes API and command-line Kubernetes tools such as kubectl. This guide shows how to set up and use the operators to run model training, hyperparameter tuning, or inference (real-time and batch) on SageMaker from a Kubernetes cluster. The procedures and guidelines in this chapter assume that you are familiar with Kubernetes and its basic commands.\", \"type\": \"Document\"}, {\"id\": null, \"metadata\": {\"source\": \"./data/sagemaker_documentation/sagemaker-projects-whatis.md\", \"_id\": \"a84a578d-c6d9-40be-ae87-9faa8cae0fdf\", \"_collection_name\": \"sagemaker_documentation_v2\"}, \"page_content\": \"What is in a SageMaker Project?\\n\\nCustomers have the flexibility to set up their projects with the resources that best serve their use case. The example below showcases the MLOps setup for an ML workflow, including model training and deployment.\", \"type\": \"Document\"}]"}